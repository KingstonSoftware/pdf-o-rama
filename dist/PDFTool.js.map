{"version":3,"sources":["../src/PDFTool.js"],"names":["toText","item","getType","hummus","ePDFObjectLiteralString","toPDFLiteralString","ePDFObjectHexString","toPDFHexString","value","PDFTool","autobind","constructor","toolName","log","container","fs","concat","options","pdfFiles","length","outputFile","pdfFile","existsSync","Error","pdfWriter","createWriter","appendPDFPagesFromPDF","end","fields","dataFile","pdfReader","createReader","catalogDict","queryDictionaryObject","getTrailer","toPDFDictionary","pagesDict","info","queryObject","numPages","getPagesCount","pageMap","i","getPageObjectID","fieldData","exists","acroformDict","fieldsArray","toPDFArray","parseFieldsArray","stripAcroFormAndAnnotations","copyFile","buf","readFile","md5","buffer","writeFile","JSON5","stringify","undefined","startModifiedDictionaryExcluding","originalDict","excludedKeys","originalDictJS","toJSObject","newDict","objectsContext","startDictionary","Object","getOwnPropertyNames","forEach","element","includes","writeKey","copyingContext","copyDirectObjectAsIs","strip","createPDFCopyingContext","page","parsePage","pageMediaBox","getMediaBox","newPage","createPage","mergePDFPageToPage","writePage","fill","data","parse","encoding","e","message","createWriterToModify","modifiedFilePath","getModifiedFileParser","font","fontDims","fontFile","getFontForFile","calculateTextDimensions","warning","pageModifier","PDFPageModifier","pageContext","startContext","getContext","filter","f","field","x","rect","y","w","h","rise","halfH","type","q","rg","re","Q","BT","g","Tm","Tf","Tj","ET","pngFileName","tmp","tmpName","postfix","QRCode","toFile","endContext","imageXObject","createFormXObjectFromPNG","cm","doXObject","unlinkSync","G","checkboxBorders","J","S","dx","dy","m","l","Math","PI","gsID","createOpacityExtGState","formXObject","createFormXObject","gsName","getResourcesDictionary","addExtGStateMapping","getContentContext","gs","B","height","endFormXObject","cos","sin","opacity","context","getObjectsContext","id","startNewIndirectObject","dict","writeNameValue","writeNumber","endLine","endDictionary","watermark","watermarkFile","watermarkInfo","getPDFPageInfo","formIDs","createFormXObjectsFromPDF","ePDFPageBoxMediaBox","startPageContentContext","mediaBox","addFormXObjectMapping","pageNum","parseKids","fieldDictionary","inheritedProperties","baseFieldName","localEnv","toString","toNumber","result","parseOnOffValue","parseRadioButtonValue","kidsArray","getLength","widgetDictionary","queryArrayObject","apDictionary","nAppearances","parseTextFieldValue","fieldName","valueField","ePDFObjectStream","bytes","readStream","startReadingFromStream","toPDFStream","notEnded","readData","read","push","PDFTextString","parseChoiceValue","ePDFObjectArray","arrayOfStrings","toJSArray","map","parseFieldsValueData","flags","localFieldType","fieldType","parseField","fieldNameT","fieldNameTU","fieldNameTM","fieldFlags","fieldRect","fieldP","toPDFIndirectObjectReference","getObjectID","r","name","fieldResult","run","argv","string","boolean","alias","o","d","c","args","debug","command","_","toLowerCase","shift","version","fullVersion","help","error"],"mappings":"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","sourcesContent":["import parseArgs from \"minimist\"\nimport { fullVersion } from \"./version\"\nimport fs from \"fs-extra\"\nimport tmp from \"tmp-promise\"\nimport hummus from \"hummus\"\nimport JSON5 from \"json5\"\nimport QRCode from \"qrcode\"\nimport md5 from \"md5\"\nimport autobind from \"autobind-decorator\"\nimport assert from \"assert\"\n\nfunction toText(item) {\n  if (item.getType() === hummus.ePDFObjectLiteralString) {\n    return item.toPDFLiteralString().toText()\n  } else if (item.getType() === hummus.ePDFObjectHexString) {\n    return item.toPDFHexString().toText()\n  } else {\n    return item.value\n  }\n}\n\n@autobind\nexport class PDFTool {\n  constructor(toolName, log, container) {\n    container = container || {}\n\n    this.toolName = toolName\n    this.log = log\n    this.hummus = container.hummus || hummus\n    this.fs = container.fs || fs\n  }\n\n  async concat(options) {\n    assert(\n      options.pdfFiles.length >= 2,\n      \"Must specify at least two PDF files to concatenate\"\n    )\n    assert(options.outputFile, \"No output file specified\")\n\n    for (let pdfFile of options.pdfFiles) {\n      if (!this.fs.existsSync(pdfFile)) {\n        throw new Error(`File '${pdfFile}' does not exist`)\n      }\n    }\n\n    const pdfWriter = this.hummus.createWriter(options.outputFile)\n\n    for (let pdfFile of options.pdfFiles) {\n      pdfWriter.appendPDFPagesFromPDF(pdfFile)\n    }\n\n    pdfWriter.end()\n  }\n\n  async fields(options) {\n    assert(\n      options.pdfFile,\n      \"Must specify a PDF from which to extract information\"\n    )\n    assert(\n      this.fs.existsSync(options.pdfFile),\n      `File '${options.pdfFile}' does not exist`\n    )\n    assert(options.dataFile, `No output data file specified`)\n\n    this.pdfReader = this.hummus.createReader(options.pdfFile)\n\n    const catalogDict = this.pdfReader\n      .queryDictionaryObject(this.pdfReader.getTrailer(), \"Root\")\n      .toPDFDictionary()\n\n    const pagesDict = this.pdfReader\n      .queryDictionaryObject(catalogDict, \"Pages\")\n      .toPDFDictionary()\n\n    this.log.info(pagesDict.queryObject(\"Count\").value)\n\n    return\n\n    // Page map is used to get page number from page object ID\n    const numPages = this.pdfReader.getPagesCount()\n\n    this.pageMap = {}\n    for (let i = 0; i < numPages; i++) {\n      this.pageMap[this.pdfReader.getPageObjectID(i)] = i\n    }\n\n    let fieldData = {\n      numPages,\n    }\n\n    if (catalogDict.exists(\"AcroForm\")) {\n      this.acroformDict = this.pdfReader\n        .queryDictionaryObject(catalogDict, \"AcroForm\")\n        .toPDFDictionary()\n\n      let fieldsArray = this.acroformDict.exists(\"Fields\")\n        ? this.pdfReader\n            .queryDictionaryObject(this.acroformDict, \"Fields\")\n            .toPDFArray()\n        : null\n\n      fieldData.fields = this.parseFieldsArray(fieldsArray, {}, \"\")\n\n      if (options.outputFile) {\n        await this.stripAcroFormAndAnnotations(\n          options.pdfFile,\n          options.outputFile\n        )\n      }\n    } else {\n      fieldData.fields = []\n\n      if (options.outputFile) {\n        await this.fs.copyFile(options.pdfFile, options.outputFile)\n      }\n    }\n\n    if (options.outputFile) {\n      const buf = await this.fs.readFile(options.outputFile)\n\n      fieldData.md5 = md5(buf.buffer)\n    }\n\n    await this.fs.writeFile(\n      options.dataFile,\n      JSON5.stringify(fieldData, undefined, \"  \")\n    )\n  }\n\n  startModifiedDictionaryExcluding(originalDict, excludedKeys) {\n    let originalDictJS = originalDict.toJSObject()\n    let newDict = this.objectsContext.startDictionary()\n\n    Object.getOwnPropertyNames(originalDictJS).forEach((element) => {\n      if (!excludedKeys.includes(element)) {\n        newDict.writeKey(element)\n        this.copyingContext.copyDirectObjectAsIs(originalDictJS[element])\n      }\n    })\n\n    return newDict\n  }\n\n  async strip(options) {\n    assert(\n      options.pdfFile,\n      \"Must specify a PDF from which to remove the AcroForm\"\n    )\n    assert(\n      this.fs.existsSync(options.pdfFile),\n      `File '${options.pdfFile}' does not exist`\n    )\n    assert(options.outputFile, `No output file specified`)\n\n    await this.stripAcroFormAndAnnotations(options.pdfFile, options.outputFile)\n  }\n\n  async stripAcroFormAndAnnotations(pdfFile, outputFile) {\n    // This strips the AcroForm and page annotations as a side-effect\n    // merging them into a new page.\n    const pdfWriter = hummus.createWriter(outputFile)\n    const pdfReader = hummus.createReader(pdfFile)\n    const copyingContext = pdfWriter.createPDFCopyingContext(pdfReader)\n\n    // Next, iterate through the pages from the source document\n    const numPages = pdfReader.getPagesCount()\n\n    for (let i = 0; i < numPages; i++) {\n      const page = pdfReader.parsePage(i)\n      const pageMediaBox = page.getMediaBox()\n      const newPage = pdfWriter.createPage(...pageMediaBox)\n\n      // Merge the page; this will also remove annotations.\n      copyingContext.mergePDFPageToPage(newPage, i)\n      pdfWriter.writePage(newPage)\n    }\n\n    pdfWriter.end()\n  }\n\n  async fill(options) {\n    assert(options.pdfFile, \"Must specify an input PDF file\")\n    assert(\n      this.fs.existsSync(options.pdfFile),\n      `File '${options.pdfFile}' does not exist`\n    )\n    assert(options.outputFile, \"No output file specified\")\n    assert(options.dataFile, \"Must specify a data file\")\n    assert(\n      this.fs.existsSync(options.dataFile),\n      `File '${options.dataFile}' does not exist`\n    )\n\n    let data = options.data\n\n    if (!data) {\n      try {\n        data = await JSON5.parse(\n          await this.fs.readFile(options.dataFile, { encoding: \"utf8\" })\n        )\n      } catch (e) {\n        throw new Error(\n          `Unable to read data file '${options.dataFile}'. ${e.message}`\n        )\n      }\n    }\n\n    if (data.md5) {\n      const buf = await this.fs.readFile(options.pdfFile)\n\n      if (md5(buf.buffer) !== data.md5) {\n        throw new Error(\n          `MD5 for ${options.pdfFile} does not match the one in the data file`\n        )\n      }\n    }\n\n    this.pdfWriter = hummus.createWriterToModify(options.pdfFile, {\n      modifiedFilePath: options.outputFile,\n    })\n    this.pdfReader = this.pdfWriter.getModifiedFileParser()\n\n    let font = null\n    let fontDims = null\n\n    if (options.fontFile) {\n      font = this.pdfWriter.getFontForFile(options.fontFile)\n      fontDims = font.calculateTextDimensions(\"X\", 14)\n    }\n\n    const catalogDict = this.pdfReader\n      .queryDictionaryObject(this.pdfReader.getTrailer(), \"Root\")\n      .toPDFDictionary()\n\n    if (catalogDict.exists(\"AcroForm\")) {\n      this.log.warning(\"PDF still has an AcroForm\")\n    }\n\n    const numPages = this.pdfReader.getPagesCount()\n\n    for (let i = 0; i < numPages; i++) {\n      const page = this.pdfReader.parsePage(i)\n      const pageModifier = new hummus.PDFPageModifier(this.pdfWriter, 0)\n      let pageContext = pageModifier.startContext().getContext()\n      const fields = data.fields.filter((f) => f.page === i)\n\n      for (let field of fields) {\n        const x = field.rect[0]\n        const y = field.rect[1]\n        const w = field.rect[2] - x\n        const h = field.rect[3] - y\n        const rise = h / 4.0\n        const halfH = h / 2\n\n        switch (field.type) {\n          case \"highlight\":\n            pageContext\n              .q()\n              .rg(1, 1, 0.6)\n              .re(x, y, w, h)\n              .f()\n              .Q()\n            break\n          case \"plaintext\":\n            if (!font) {\n              throw new Error(\n                \"Font file must be specified for plaintext fields\"\n              )\n            }\n            pageContext\n              .q()\n              .BT()\n              .g(0)\n              .Tm(1, 0, 0, 1, x, y + rise)\n              .Tf(font, 14)\n              .Tj(field.value || \"\")\n              .ET()\n              .Q()\n            break\n          case \"qrcode\":\n            const pngFileName = await tmp.tmpName({ postfix: \".png\" })\n\n            await QRCode.toFile(pngFileName, field.value || \"\")\n\n            pageModifier.endContext()\n            let imageXObject = this.pdfWriter.createFormXObjectFromPNG(\n              pngFileName\n            )\n            pageContext = pageModifier.startContext().getContext()\n\n            pageContext\n              .q()\n              .cm(1, 0, 0, 1, x, y)\n              .doXObject(imageXObject)\n              .Q()\n\n            fs.unlinkSync(pngFileName)\n            break\n          case \"checkbox\":\n            pageContext\n              .q()\n              .G(0)\n              .w(2.5)\n\n            if (options.checkboxBorders) {\n              pageContext\n                .J(2)\n                .re(x, y, w, h)\n                .S()\n            }\n\n            if (!!field.value) {\n              const dx = w / 5.0\n              const dy = h / 5.0\n\n              pageContext\n                .J(1)\n                .m(x + dx, y + dy)\n                .l(x + w - dx, y + h - dy)\n                .S()\n                .m(x + dx, y + h - dy)\n                .l(x + w - dy, y + dy)\n                .S()\n            }\n\n            pageContext.Q()\n            break\n          case \"signhere\":\n            if (!font) {\n              throw new Error(\"Font file must be specified for signhere fields\")\n            }\n\n            const q = Math.PI / 4.0\n\n            pageModifier.endContext()\n\n            let gsID = this.createOpacityExtGState(0.5)\n            let formXObject = this.pdfWriter.createFormXObject(0, 0, w, h)\n            let gsName = formXObject\n              .getResourcesDictionary()\n              .addExtGStateMapping(gsID)\n\n            formXObject\n              .getContentContext()\n              .q()\n              .gs(gsName)\n              .w(1.0)\n              .G(0)\n              .rg(1, 0.6, 1)\n              .m(0, halfH)\n              .l(halfH, 0)\n              .l(w, 0)\n              .l(w, h)\n              .l(halfH, h)\n              .h()\n              .B()\n              .BT()\n              .g(0)\n              .Tm(1, 0, 0, 1, halfH, halfH - fontDims.height / 2.0)\n              .Tf(font, 12)\n              .Tj(`Sign Here ${field.value || \"\"}`)\n              .ET()\n              .Q()\n            this.pdfWriter.endFormXObject(formXObject)\n\n            pageContext = pageModifier.startContext().getContext()\n\n            pageContext\n              .q()\n              .cm(1, 0, 0, 1, x, y + halfH)\n              .cm(Math.cos(q), Math.sin(q), -Math.sin(q), Math.cos(q), 0, 0)\n              .cm(1, 0, 0, 1, 0, -halfH)\n              // NOTE: The coordinate space of the XObjects is the same as the page!\n              .doXObject(formXObject)\n              .Q()\n            break\n          default:\n            this.log.warning(`Unknown field type ${field.type}`)\n            break\n        }\n      }\n\n      pageModifier.endContext().writePage()\n    }\n\n    this.pdfWriter.end()\n  }\n\n  createOpacityExtGState(opacity) {\n    const context = this.pdfWriter.getObjectsContext()\n    const id = context.startNewIndirectObject()\n    const dict = context.startDictionary()\n\n    dict\n      .writeKey(\"type\")\n      .writeNameValue(\"ExtGState\")\n      .writeKey(\"ca\")\n    context.writeNumber(opacity).endLine()\n    dict.writeKey(\"CA\")\n    context\n      .writeNumber(opacity)\n      .endLine()\n      .endDictionary(dict)\n\n    return id\n  }\n\n  async watermark(options) {\n    assert(\n      options.pdfFile,\n      \"Must specify a PDF from which to remove the AcroForm\"\n    )\n    assert(\n      this.fs.existsSync(options.pdfFile),\n      `File '${options.pdfFile}' does not exist`\n    )\n    assert(options.watermarkFile, \"No watermark file specified\")\n    assert(\n      this.fs.existsSync(options.watermarkFile),\n      `File '${options.watermarkFile}' does not exist`\n    )\n    assert(options.outputFile, \"No output file specified\")\n\n    this.pdfWriter = hummus.createWriter(options.outputFile)\n    this.pdfReader = hummus.createReader(options.pdfFile)\n    const copyingContext = this.pdfWriter.createPDFCopyingContext(\n      this.pdfReader\n    )\n\n    // First, read in the watermark PDF and create a\n    const watermarkInfo = this.getPDFPageInfo(options.watermarkFile, 0)\n\n    const formIDs = this.pdfWriter.createFormXObjectsFromPDF(\n      options.watermarkFile,\n      hummus.ePDFPageBoxMediaBox\n    )\n\n    // Next, iterate through the pages from the source document\n    const numPages = this.pdfReader.getPagesCount()\n\n    for (let i = 0; i < numPages; i++) {\n      const page = this.pdfReader.parsePage(i)\n      const pageMediaBox = page.getMediaBox()\n      const newPage = this.pdfWriter.createPage(...pageMediaBox)\n\n      // Merge the page; this will also remove annotations.\n      copyingContext.mergePDFPageToPage(newPage, i)\n\n      const pageContext = this.pdfWriter.startPageContentContext(newPage)\n\n      pageContext\n        .q()\n        .cm(\n          1,\n          0,\n          0,\n          1,\n          (pageMediaBox[2] - watermarkInfo.mediaBox[2]) / 2,\n          (pageMediaBox[3] - watermarkInfo.mediaBox[3]) / 2\n        )\n        .doXObject(\n          newPage.getResourcesDictionary().addFormXObjectMapping(formIDs[0])\n        )\n        .Q()\n\n      this.pdfWriter.writePage(newPage)\n    }\n\n    this.pdfWriter.end()\n  }\n\n  getPDFPageInfo(pdfFile, pageNum) {\n    const pdfReader = hummus.createReader(pdfFile)\n    const page = pdfReader.parsePage(pageNum)\n\n    return {\n      mediaBox: page.getMediaBox(),\n    }\n  }\n\n  parseKids(fieldDictionary, inheritedProperties, baseFieldName) {\n    let localEnv = {}\n\n    if (fieldDictionary.exists(\"FT\")) {\n      localEnv[\"FT\"] = fieldDictionary.queryObject(\"FT\").toString()\n    }\n    if (fieldDictionary.exists(\"Ff\")) {\n      localEnv[\"Ff\"] = fieldDictionary.queryObject(\"Ff\").toNumber()\n    }\n    if (fieldDictionary.exists(\"DA\")) {\n      localEnv[\"DA\"] = toText(fieldDictionary.queryObject(\"DA\"))\n    }\n    if (fieldDictionary.exists(\"Opt\")) {\n      localEnv[\"Opt\"] = fieldDictionary.queryObject(\"Opt\").toPDFArray()\n    }\n\n    let result = this.parseFieldsArray(\n      this.pdfReader\n        .queryDictionaryObject(fieldDictionary, \"Kids\")\n        .toPDFArray(),\n      { ...inheritedProperties, ...localEnv },\n      baseFieldName\n    )\n\n    return result\n  }\n\n  parseOnOffValue(fieldDictionary) {\n    if (fieldDictionary.exists(\"V\")) {\n      let value = fieldDictionary.queryObject(\"V\").toString()\n      if (value === \"Off\" || value === \"\") {\n        return false\n      } else {\n        return true\n      }\n    } else {\n      return null\n    }\n  }\n\n  parseRadioButtonValue(fieldDictionary) {\n    if (fieldDictionary.exists(\"V\")) {\n      let value = fieldDictionary.queryObject(\"V\").toString()\n\n      if (value === \"Off\" || value === \"\") {\n        return null\n      } else {\n        // using true cause sometimes these are actually checkboxes, and there's no underlying kids\n        let result = true\n        // for radio button this would be an appearance name of a radio button that's turned on. we wanna look for it\n        if (fieldDictionary.exists(\"Kids\")) {\n          let kidsArray = this.pdfReader\n            .queryDictionaryObject(fieldDictionary, \"Kids\")\n            .toPDFArray()\n\n          for (let i = 0; i < kidsArray.getLength(); ++i) {\n            let widgetDictionary = this.pdfReader\n              .queryArrayObject(kidsArray, i)\n              .toPDFDictionary()\n            // use the dictionary Ap/N dictionary for looking up the appearance stream name\n            let apDictionary = this.pdfReader\n              .queryDictionaryObject(widgetDictionary, \"AP\")\n              .toPDFDictionary()\n            let nAppearances = this.pdfReader\n              .queryDictionaryObject(apDictionary, \"N\")\n              .toPDFDictionary()\n\n            if (nAppearances.exists(value)) {\n              // Found!\n              result = i // save the selected index as value\n              break\n            }\n          }\n        }\n\n        return result\n      }\n    } else {\n      return null\n    }\n  }\n\n  parseTextFieldValue(fieldDictionary, fieldName) {\n    // grab field value, may be either a text string or a text stream\n    if (!fieldDictionary.exists(fieldName)) {\n      return null\n    }\n\n    let valueField = this.pdfReader.queryDictionaryObject(\n      fieldDictionary,\n      fieldName\n    )\n\n    if (valueField.getType() == hummus.ePDFObjectLiteralString) {\n      return toText(valueField)\n    } else if (valueField.getType() == hummus.ePDFObjectStream) {\n      let bytes = []\n      let readStream = pdfReader.startReadingFromStream(\n        valueField.toPDFStream()\n      )\n\n      while (readStream.notEnded()) {\n        const readData = readStream.read(1)\n        // do something with the data\n        bytes.push(readData[0])\n      }\n      return new PDFTextString(bytes).toString()\n    } else {\n      return null\n    }\n  }\n\n  parseChoiceValue(fieldDictionary) {\n    if (fieldDictionary.exists(\"V\")) {\n      let valueField = this.pdfReader.queryDictionaryObject(\n        fieldDictionary,\n        \"V\"\n      )\n\n      if (\n        valueField.getType() == hummus.ePDFObjectLiteralString ||\n        valueField.getType() == hummus.ePDFObjectHexString\n      ) {\n        // text string. read into value\n        return toText(valueField)\n      } else if (valueField.getType == hummus.ePDFObjectArray) {\n        let arrayOfStrings = valueField.toPDFArray().toJSArray()\n        return arrayOfStrings.map(toText)\n      } else {\n        return undefined\n      }\n    } else {\n      return undefined\n    }\n  }\n\n  parseFieldsValueData(result, fieldDictionary, flags, inheritedProperties) {\n    const localFieldType = fieldDictionary.exists(\"FT\")\n      ? fieldDictionary.queryObject(\"FT\").toString()\n      : undefined\n    const fieldType = localFieldType || inheritedProperties[\"FT\"]\n\n    if (!fieldType) {\n      return null // Must be a widget\n    }\n\n    switch (fieldType) {\n      case \"Btn\": {\n        if ((flags >> 16) & 1) {\n          // push button\n          result[\"type\"] = \"button\"\n          // no value\n        } else if ((flags >> 15) & 1) {\n          // radio button\n          result[\"type\"] = \"radio\"\n          result[\"value\"] = this.parseRadioButtonValue(fieldDictionary)\n        } else {\n          // checkbox\n          result[\"type\"] = \"checkbox\"\n          result[\"value\"] = this.parseOnOffValue(fieldDictionary)\n        }\n        break\n      }\n      case \"Tx\": {\n        // result['isFileSelect'] = !!(flags>>20 & 1)\n        if ((flags >> 25) & 1) {\n          result[\"type\"] = \"richtext\"\n          // rich text, value in 'RV'\n          result[\"value\"] = this.parseTextFieldValue(fieldDictionary, \"RV\")\n          result[\"plainValue\"] = this.parseTextFieldValue(fieldDictionary, \"V\")\n        } else {\n          result[\"type\"] = \"plaintext\"\n          result[\"value\"] = this.parseTextFieldValue(fieldDictionary, \"V\")\n        }\n\n        break\n      }\n      case \"Ch\": {\n        result[\"type\"] = \"choice\"\n        result[\"value\"] = this.parseChoiceValue(fieldDictionary)\n        break\n      }\n      case \"Sig\": {\n        result[\"type\"] = \"signature\"\n        break\n      }\n    }\n  }\n\n  parseField(fieldDictionary, inheritedProperties, baseFieldName) {\n    let fieldNameT = fieldDictionary.exists(\"T\")\n      ? toText(fieldDictionary.queryObject(\"T\"))\n      : undefined\n    let fieldNameTU = fieldDictionary.exists(\"TU\")\n      ? toText(fieldDictionary.queryObject(\"TU\"))\n      : undefined\n    let fieldNameTM = fieldDictionary.exists(\"TM\")\n      ? toText(fieldDictionary.queryObject(\"TM\"))\n      : undefined\n    let fieldFlags = fieldDictionary.exists(\"Ff\")\n      ? fieldDictionary.queryObject(\"Ff\").toNumber()\n      : undefined\n    let fieldRect = fieldDictionary.exists(\"Rect\")\n      ? fieldDictionary\n          .queryObject(\"Rect\")\n          .toPDFArray()\n          .toJSArray()\n      : undefined\n    let fieldP = fieldDictionary.exists(\"P\")\n      ? fieldDictionary\n          .queryObject(\"P\")\n          .toPDFIndirectObjectReference()\n          .getObjectID()\n      : undefined\n\n    fieldFlags =\n      fieldFlags === undefined ? inheritedProperties[\"Ff\"] : fieldFlags\n    fieldFlags = fieldFlags || 0\n\n    if (fieldRect) {\n      fieldRect = fieldRect.map((r) => r.value)\n    }\n\n    // Assume that if there's no T and no Kids, this is a widget annotation which is not a field\n    if (\n      fieldNameT === undefined &&\n      !fieldDictionary.exists(\"Kids\") &&\n      fieldDictionary.exists(\"Subtype\") &&\n      fieldDictionary.queryObject(\"Subtype\").toString() == \"Widget\"\n    ) {\n      return null\n    }\n\n    // NOTE: We don't care about field values\n    //\n    // let result = {\n    //   name: fieldNameT,\n    //   // NOTE: Other fields to consider...\n    //   // alternateName: fieldNameTU,\n    //   // mappingName: fieldNameTM,\n    //   // isNoExport: !!((fieldFlags>>2) & 1),\n    //   rect: fieldRect,\n    //   page: this.pageMap[fieldP],\n    // }\n    //\n    // if (fieldDictionary.exists(\"Kids\")) {\n    //   let kids = this.parseKids(\n    //     fieldDictionary,\n    //     inheritedProperties,\n    //     baseFieldName + fieldNameT + \".\"\n    //   )\n\n    //   if (kids) {\n    //     // that would be a non terminal node, otherwise all kids are annotations an null would be returned\n    //     // result[\"kids\"] = kids\n    //   } else {\n    //     // a terminal node, so kids array returned empty\n    //     this.parseFieldsValueData(\n    //       result,\n    //       fieldDictionary,\n    //       fieldFlags,\n    //       inheritedProperties\n    //     )\n    //   }\n    // } else {\n    //   // read fields value data\n    //   this.parseFieldsValueData(\n    //     result,\n    //     fieldDictionary,\n    //     fieldFlags,\n    //     inheritedProperties\n    //   )\n    // }\n\n    if (fieldDictionary.exists(\"Kids\")) {\n      return null\n    }\n\n    return {\n      name: fieldNameT,\n      rect: fieldRect,\n      page: this.pageMap[fieldP],\n    }\n  }\n\n  parseFieldsArray(fieldsArray, inheritedProperties, baseFieldName) {\n    let result = []\n\n    for (let i = 0; i < fieldsArray.getLength(); ++i) {\n      let fieldResult = this.parseField(\n        this.pdfReader.queryArrayObject(fieldsArray, i).toPDFDictionary(),\n        inheritedProperties,\n        baseFieldName\n      )\n\n      if (fieldResult) {\n        result.push(fieldResult)\n      }\n    }\n\n    return result\n  }\n\n  async run(argv) {\n    const options = {\n      string: [\"output-file\", \"watermark-file\", \"data-file\", \"font-file\"],\n      boolean: [\"help\", \"version\", \"checkbox-borders\", \"debug\"],\n      alias: {\n        o: \"output-file\",\n        w: \"watermark-file\",\n        d: \"data-file\",\n        f: \"font-file\",\n        c: \"checkbox-borders\",\n      },\n    }\n\n    const args = parseArgs(argv, options)\n\n    this.debug = args.debug\n\n    let command = \"help\"\n\n    if (args._.length > 0) {\n      command = args._[0].toLowerCase()\n      args._.shift()\n    }\n\n    if (args.version) {\n      this.log.info(`${fullVersion}`)\n      return 0\n    }\n\n    switch (command) {\n      case \"concat\":\n        if (args.help) {\n          this.log.info(`\nUsage: ${this.toolName} concat <pdf1> <pdf2> [<pdf3> ...] [options]\n\nOptions:\n  --output-file, -o  Output PDF file\n\nNotes:\n  File will be concatenated in the order in which they are given.\n`)\n          return 0\n        }\n        return await this.concat({\n          pdfFiles: args._,\n          outputFile: args[\"output-file\"],\n        })\n      case \"fields\":\n        if (args.help) {\n          this.log.info(`\nUsage: ${this.toolName} fields <pdf>\n\nOptions:\n--data-file, -d         Output JSON5 file\n--output-file, -o       Optional output PDF stripped of AcroForm and annotations.\n                        Adds 'md5' field to the output JSON5.\n\nNotes:\nOutputs a JSON5 file containing information for all the AcroForm fields in the document.\nIf an output file is specified a stripped PDF will be generated (see 'strip' command)\nand an MD5 hash for the file will be included in the data file.\n`)\n          return 0\n        }\n        return await this.fields({\n          pdfFile: args._[0],\n          dataFile: args[\"data-file\"],\n          outputFile: args[\"output-file\"],\n        })\n      case \"strip\":\n        if (args.help) {\n          this.log.info(`\nUsage: ${this.toolName} strip <pdf> [options]\n\nOptions:\n  --output-file, -o    Output PDF file\n\nNotes:\nStrips any AcroForm and page annotations from the document.\n`)\n          return 0\n        }\n        return await this.strip({\n          pdfFile: args._[0],\n          outputFile: args[\"output-file\"],\n        })\n      case \"watermark\":\n        if (args.help) {\n          this.log.info(`\nUsage: ${this.toolName} watermark <pdf> [options]\n\nOptions:\n  --watermark-file , -w   Watermarked PDF document\n  --output-file, -o       Output PDF file\n\nNotes:\nAdds a watermark images to the existing content of each page of the given PDF.\n`)\n          return 0\n        }\n        return await this.watermark({\n          pdfFile: args._[0],\n          watermarkFile: args[\"watermark-file\"],\n          outputFile: args[\"output-file\"],\n        })\n      case \"fill\":\n        if (args.help) {\n          this.log.info(`\nUsage: ${this.toolName} fill <pdf> [options]\n\nOptions:\n--output-file, -o       Output PDF file\n--data-file, -d         Input JSON5 data file\n--font-file, -f         Input font file name to use for text fields\n--checkbox-borders, -c  Put borders around checkboxes\n\nNotes:\nInserts 'form' data into the pages of the PDF.\n`)\n          return 0\n        }\n        return await this.fill({\n          pdfFile: args._[0],\n          outputFile: args[\"output-file\"],\n          dataFile: args[\"data-file\"],\n          fontFile: args[\"font-file\"],\n          checkboxBorders: !!args[\"checkbox-borders\"],\n        })\n      case \"help\":\n        this.log.info(`\nUsage: ${this.toolName} <cmd> [options]\n\nCommands:\nhelp              Shows this help\nconcat            Concatenate two or more PDFs\nfields            Extract the field data from a PDF and optionally\n                  create a PDF stripped of its AcroForm and annotations.\n                  Generates an MD5 hash for the stripped PDF.\nstrip             Strip an AcroForm from a PDF\nwatermark         Add a watermark to every page of a PDF. Strips\n                  AcroForms and annotations in the resulting file.\nfill              Fill-in \"fields\" defined in a JSON5 file with data,\n                  checking against existing MD5 has for changes.\n\nGlobal Options:\n  --help          Shows this help.\n  --version       Shows the tool version.\n`)\n        return 0\n      default:\n        this.log.error(\n          `Unknown command ${command}.  Use --help to see available commands`\n        )\n        return -1\n    }\n\n    return 0\n  }\n}\n"],"file":"PDFTool.js"}